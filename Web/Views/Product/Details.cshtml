@using AutoMapper
@model ProductDTO
@inject IMapper _Mapper

@{
    ViewData["Title"] = Model.ProductName;
}
@section Styles {
    <style>
        input[type=number]::-webkit-outer-spin-button,
        input[type=number]::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        .purch_num {
            width: 60px;
        }
    </style>
}

<div class="container">
    <div class="row">
        <div class="col-md-6 mb-4">
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="/images/@Model.ImageUrl" class="img-fluid rounded" alt="@Model.ProductName">
            }
            else
            {
                <div class="bg-light rounded text-center py-5">
                    <i class="fas fa-image fa-5x text-muted"></i>
                </div>
            }
        </div>
        <div class="col-md-6 mb-5">
            <h1>@Model.ProductName</h1>
            <p class="text-muted">@Model.CategoryName</p>
            
            <div class="mb-4">
                @if (Model.UnitPrice.HasValue)
                {
                    <h3 class="text-danger">NT$ @Model.UnitPrice.Value.ToString("N0")</h3>
                }
            </div>
            <div class="mb-4">
                <h5>商品描述</h5>
                <p>@(Model.Description ?? "暫無描述")</p>
            </div>
            <div class="d-flex justify-content-between">
                <div class="input-group w-auto">                    
                    <input id="@(string.Concat("purchNum_", Model.ProductID))" name="Count" type="number" min="1" max="@Model.UnitsInStock" class="purch_num text-center fs-8 border-0 border-top border-bottom" value="1" />
                    
                </div>
                <div>
                    @if(@Model.UnitsInStock > 0)
                    {
                        @* <a asp-action="Edit" asp-route-id="@Model.ProductID" class="btn btn-primary">編輯商品</a>
                        <a asp-action="Delete" asp-route-id="@Model.ProductID" class="btn btn-danger">刪除商品</a> *@
                        <button type="submit" class="btn btn-danger immed-cart-btn" data-purch-id="@(string.Concat("purchNum_", Model.ProductID))">立即購買</button>
                        <button type="button" class="btn btn-primary add-cart-btn" data-purch-id="@(string.Concat("purchNum_", Model.ProductID))">加入購物車</button>
                        <input type="hidden" name="ProductId" value="@Model.ProductID" />
                        
                    }
                    else
                    {
                        <button type="button" class="btn btn-secondary">商品目前缺貨</button>
                    }
                </div>
            </div>

        </div>
            

        <div class="mb-4">
            <h5>商品資訊</h5>
            <table class="table">
                <tr>
                    <th width="150">供應商</th>
                    <td>@Model.SupplierName</td>
                </tr>
                <tr>
                    <th>庫存數量</th>
                    <td>@(Model.UnitsInStock?.ToString() ?? "0")</td>
                </tr>
                <tr>
                    <th>單位</th>
                    <td>@Model.QuantityPerUnit</td>
                </tr>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        inputNumBuildBtnsClickEvent(document.querySelector("#@(string.Concat("purchNum_", Model.ProductID))"));
        detectNumScopeBlurEvent(".purch_num");
        addProductToShoppingCar(".add-cart-btn");
        addProductToShoppingCar(".immed-cart-btn", true);

        function addProductToShoppingCar(btnClassName, immediately = false) {
            document.querySelectorAll(btnClassName).forEach(btn => {
                btn.addEventListener("click", function() {
                    let url = "@Url.Action("AddToShoppingCart", "ShoppingCart")";
                    let inputId = this.dataset["purchId"];
                    let inputElem = document.querySelector("#"+inputId);
                    let p_id = inputId.substr(inputId.indexOf("_")+1);

                    fetch(url, {
                        method: "POST",
                        headers: fetchHeaders(),
                        body: JSON.stringify({
                            Product: {
                                ProductID: p_id
                            },
                            PurchCount: inputElem.value
                        })
                    })
                    .then(async res => {    
                        switch (res.status){
                            case 200 :                                 
                                if (immediately) {
                                    window.location.href = "@Url.Action("Checkout", "ShoppingCart")";
                                }
                                else {
                                    showMsg("✔ 商品已放入購物車");
                                }
                                return;
                            case 400 :
                                showAlert("✖ " + await res.text());
                                return;
                            case 401 :
                                showAlert("⚠️ 請登入會員或註冊會員帳號");
                                return;
                            default :
                                showAlert("✖ 發生未知錯誤，請稍後再試");
                                return;
                        }
                    })
                    .catch(err => {
                        console.error("Error:", err);
                        showAlert("✖ 發生錯誤，請稍後再試");
                    });
                });
            });
        }
    </script>
}